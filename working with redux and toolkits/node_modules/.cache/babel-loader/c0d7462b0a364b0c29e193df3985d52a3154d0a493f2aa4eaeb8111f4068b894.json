{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst AuthSlicer = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state, action) {\n      state.isAuthenticated = ac;\n    }\n  }\n});\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    counter: 0,\n    hide: true\n  },\n  reducers: {\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggle(state) {\n      state.hide = !state.hide;\n    }\n  }\n});\n\n// const counterReducer = (state = { counter: 0, hide: true }, action) => {\n//   if (action.type === \"increment\") {\n//     if (state.hide) {\n//       return {\n//         counter: state.counter + 1,\n//         hide: state.hide,\n//       };\n//     } else {\n//       return {\n//         counter: state.counter,\n//         hide: state.hide,\n//       };\n//     }\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       hide: state.hide,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       counter: state.counter,\n//       hide: !state.hide,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       hide: state.hide,\n//     };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// const store = createStore(counterSlice.reducer);\n\n// const store = configureStore(\n//   {\n//     reducer:counterSlice.reducer\n//   }\n//   );\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    Auth: AuthSlicer.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const AuthActions = AuthSlicer.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","createStore","initialAuthState","isAuthenticated","AuthSlicer","name","initialState","reducers","login","state","action","ac","counterSlice","counter","hide","increase","payload","increment","decrement","toggle","store","reducer","Auth","counterActions","actions","AuthActions"],"sources":["/home/hp/ReactProjects/reduz/react-complete-guide-code-18-diving-into-redux/code/03-using-redux-data-in-react-cmp/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initialAuthState = {\n  isAuthenticated: false,\n};\nconst AuthSlicer = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state, action) {\n      state.isAuthenticated = ac;\n    },\n  },\n});\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: { counter: 0, hide: true },\n  reducers: {\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggle(state) {\n      state.hide = !state.hide;\n    },\n  },\n});\n\n// const counterReducer = (state = { counter: 0, hide: true }, action) => {\n//   if (action.type === \"increment\") {\n//     if (state.hide) {\n//       return {\n//         counter: state.counter + 1,\n//         hide: state.hide,\n//       };\n//     } else {\n//       return {\n//         counter: state.counter,\n//         hide: state.hide,\n//       };\n//     }\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       hide: state.hide,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       counter: state.counter,\n//       hide: !state.hide,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       hide: state.hide,\n//     };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// const store = createStore(counterSlice.reducer);\n\n// const store = configureStore(\n//   {\n//     reducer:counterSlice.reducer\n//   }\n//   );\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, Auth: AuthSlicer.reducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const AuthActions = AuthSlicer.actions;\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AACnB,CAAC;AACD,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACN,eAAe,GAAGQ,EAAE;IAC5B;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGZ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IAAEO,OAAO,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC;EACxCP,QAAQ,EAAE;IACRQ,QAAQA,CAACN,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACI,OAAO,GAAGJ,KAAK,CAACI,OAAO,GAAGH,MAAM,CAACM,OAAO;IAChD,CAAC;IACDC,SAASA,CAACR,KAAK,EAAE;MACfA,KAAK,CAACI,OAAO,EAAE;IACjB,CAAC;IACDK,SAASA,CAACT,KAAK,EAAE;MACfA,KAAK,CAACI,OAAO,EAAE;IACjB,CAAC;IACDM,MAAMA,CAACV,KAAK,EAAE;MACZA,KAAK,CAACK,IAAI,GAAG,CAACL,KAAK,CAACK,IAAI;IAC1B;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMM,KAAK,GAAGrB,cAAc,CAAC;EAC3BsB,OAAO,EAAE;IAAER,OAAO,EAAED,YAAY,CAACS,OAAO;IAAEC,IAAI,EAAElB,UAAU,CAACiB;EAAQ;AACrE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGX,YAAY,CAACY,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGrB,UAAU,CAACoB,OAAO;AAE7C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}