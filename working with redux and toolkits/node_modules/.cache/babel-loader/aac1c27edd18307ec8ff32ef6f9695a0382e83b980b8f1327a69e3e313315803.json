{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialAuthentication = {\n  isAuthenticated: false\n};\nconst AthSlicer = createSlice({\n  name: \"authentication\",\n  initialAuthentication,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    }\n  }\n});\n\n// const counterSlice=createSlice({\n//   name: \"counter\",\n//   initialState: { counter: 0, hide: true },\n//   reducers: {\n//     increase(state,action) {\n//       state.counter=state.counter+action.payload\n//     },\n//     increment(state){\n//        state.counter ++\n//     },\n//     decrement(state) {\n//       state.counter --\n//     },\n//     toggle(state) {\n//       state.hide=!state.hide\n//     },\n//   },\n// });\n\n// const counterReducer = (state = { counter: 0, hide: true }, action) => {\n//   if (action.type === \"increment\") {\n//     if (state.hide) {\n//       return {\n//         counter: state.counter + 1,\n//         hide: state.hide,\n//       };\n//     } else {\n//       return {\n//         counter: state.counter,\n//         hide: state.hide,\n//       };\n//     }\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       hide: state.hide,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       counter: state.counter,\n//       hide: !state.hide,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       hide: state.hide,\n//     };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// const store = createStore(counterSlice.reducer);\n\n// const store = configureStore(\n//   {\n//     reducer:counterSlice.reducer\n//   }\n//   );\n\nconst store = configureStore({\n  reducer: AthSlicer.reducer\n});\n\n// export const counterActions = counterSlice.actions\nexport const AuthActions = AthSlicer.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","createStore","initialAuthentication","isAuthenticated","AthSlicer","name","reducers","login","state","store","reducer","AuthActions","actions"],"sources":["/home/hp/ReactProjects/reduz/react-complete-guide-code-18-diving-into-redux/code/03-using-redux-data-in-react-cmp/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initialAuthentication={\n  isAuthenticated: false\n}\nconst AthSlicer = createSlice({\n  name: \"authentication\",\n  initialAuthentication,\n  reducers:{\n    login(state){\n      state.isAuthenticated = true;\n    }\n  }\n})\n\n// const counterSlice=createSlice({\n//   name: \"counter\",\n//   initialState: { counter: 0, hide: true },\n//   reducers: {\n//     increase(state,action) {\n//       state.counter=state.counter+action.payload\n//     },\n//     increment(state){\n//        state.counter ++\n//     },\n//     decrement(state) {\n//       state.counter --\n//     },\n//     toggle(state) {\n//       state.hide=!state.hide\n//     },\n//   },\n// });\n\n// const counterReducer = (state = { counter: 0, hide: true }, action) => {\n//   if (action.type === \"increment\") {\n//     if (state.hide) {\n//       return {\n//         counter: state.counter + 1,\n//         hide: state.hide,\n//       };\n//     } else {\n//       return {\n//         counter: state.counter,\n//         hide: state.hide,\n//       };\n//     }\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       hide: state.hide,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       counter: state.counter,\n//       hide: !state.hide,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       hide: state.hide,\n//     };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// const store = createStore(counterSlice.reducer);\n\n// const store = configureStore(\n//   {\n//     reducer:counterSlice.reducer\n//   }\n//   );\n\n  const store = configureStore(\n    {\n      reducer:AthSlicer.reducer\n    }\n    );\n    \n  \n  // export const counterActions = counterSlice.actions\n  export const AuthActions = AthSlicer.actions\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,qBAAqB,GAAC;EAC1BC,eAAe,EAAE;AACnB,CAAC;AACD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,gBAAgB;EACtBH,qBAAqB;EACrBI,QAAQ,EAAC;IACPC,KAAKA,CAACC,KAAK,EAAC;MACVA,KAAK,CAACL,eAAe,GAAG,IAAI;IAC9B;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEE,MAAMM,KAAK,GAAGV,cAAc,CAC1B;EACEW,OAAO,EAACN,SAAS,CAACM;AACpB,CACA,CAAC;;AAGH;AACA,OAAO,MAAMC,WAAW,GAAGP,SAAS,CAACQ,OAAO;AAE9C,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}